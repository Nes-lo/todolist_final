plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'


}



group 'co.devco.neslo'
version '1.0-SNAPSHOT'

java{
    sourceCompatibility=JavaVersion.VERSION_11
    targetCompatibility=JavaVersion.VERSION_11

}
jacoco{
    toolVersion="0.8.8"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/devco/neslo/todolist/infrastructure/config/**',
                    'com/devco/neslo/todolist/infrastructure/model/**',
                    'com/devco/neslo/todolist/domain/model/**',
                    'com/devco/neslo/todolist/TodoListApp*'
            ])
        })
    }
}

configurations {
    developmentOnly
    runtimeClasspath{
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }

}


repositories {
    mavenCentral()
    maven {
        url 'https://maven.aliyun.com/nexus/content/groups/public/'
    }
}

ext{
     junitVersion='5.9.0'
    openapiUIVersion='1.6.11'
    restAssureVersion = '5.2.0'
    mockitoVersion = '4.8.0'
    lombokVersion = '1.18.24'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.springdoc:springdoc-openapi-ui:${openapiUIVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "io.rest-assured:spring-mock-mvc:${restAssureVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssureVersion}"
    testImplementation "io.rest-assured:xml-path:${restAssureVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"


}

test {
    useJUnitPlatform()
}